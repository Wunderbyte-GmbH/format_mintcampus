{"version":3,"file":"activitynavigation.min.js","sources":["../src/activitynavigation.js"],"sourcesContent":["/**\n * mintcampus Course Format settings\n *\n * @package    format_mintcampus\n * @version    See the value of '$plugin->version' in the version.php file.\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later.\n */\n\ndefine(['jquery','core/ajax',\n        'core/notification',\n        'core/str',\n        'core/templates',\n        'core/modal_factory',\n        'core/modal_events',\n        'core/pending'],\n    function ($,Ajax,\n              Notification,\n              Str,\n              Templates,\n              ModalFactory,\n              ModalEvents,\n              Pending) {\n\n        /**\n         * Init this module which allows activity completion state to be changed via ajax.\n         * @method init\n         * @param {string} fullName The current user's full name.\n         * @private\n         */\n        const init = function (cmid) {\n\n            var pendingPromise = new Pending('format_mintcampus/activitynavigation:init');\n\n            var ispresent = $('.activity-header');\n            if(ispresent.length){\n\n               Ajax.call([{\n                   methodname: 'format_mintcampus_get_activity_navigation',\n                   args: {cmid: cmid}\n               }])[0].then(function (activitydata) {\n                   return activitydata;\n               }).then(async function (activitydata) {\n\n                   //apply activity data\n                   $('#mintcampusactivityheader').html(activitydata['activityheader']);\n                   $('#mintcampusactivityfooter').html(activitydata['activityfooter']);\n\n                   if(activitydata['previouscm']!=0){\n                       $(\"#courseindex-content\").find(\"li[data-id='\"+activitydata['previouscm']+\"']\").addClass(\"pageitem\");\n                   }\n\n                   $(\"div.float-right a\").removeClass(\"btn-link\").addClass(\"btn-primary\").html(await Str.get_string('captionnext', 'format_mintcampus'));\n                   $(\"div.float-left a\").removeClass(\"btn-link\").addClass(\"btn-primary\").html(await Str.get_string('captionback', 'format_mintcampus'));\n\n                   const courseid = $('#mintcampuscourserating').attr(\"data-id\");\n\n                   $('#mintcampuscourserating').click(function() {\n\n                       //get data for course rating\n                       Ajax.call([{\n                           methodname: 'format_mintcampus_get_rating',\n                           args: {courseid: courseid}\n                       }])[0].then(async function (ratingprompt) {\n\n                           ModalFactory.create({\n                               title: await Str.get_string('courserating', 'format_mintcampus'),\n                               body: ratingprompt['ratingprompt'],\n                               type: ModalFactory.types.SAVE_CANCEL,\n                               large: true\n                           }).then(async function(modal) {\n                               modal.setSaveButtonText(await Str.get_string('save', 'core'));\n\n                               const rangeInputs = document.querySelectorAll('input[type=\"range\"]');\n\n                               function handleInputChange(e) {\n                                   let target = e.target;\n                                   const min = target.min;\n                                   const max = target.max;\n                                   const val = target.value;\n\n                                   target.style.backgroundSize = (val - min) * 100 / (max - min) + '% 100%';\n                               }\n\n                               rangeInputs.forEach(input => {\n                                   input.addEventListener('input', handleInputChange);\n\n                                   let min = input.min;\n                                   let max = input.max;\n                                   let val = input.value;\n\n                                   input.style.backgroundSize = (val - min) * 100 / (max - min) + '% 100%';\n                               });\n\n                               // Register the click, space and enter events as activators for the trigger element.\n                               /*$('#mintcampus_radio_box').change(function(){\n                               });*/\n\n                               // Handle save event.\n                               modal.getRoot().on(ModalEvents.save, async function(e) {\n\n                                   var submission = $('#mintcampus_comment').val();\n\n                                   Ajax.call([{\n                                       methodname: 'format_mintcampus_save_comment',\n                                       args: {courseid: courseid, submission:submission}\n                                   }])[0].then(function () {\n\n                                   }).always(pendingPromise.resolve)\n                                       .catch(Notification.exception);\n\n                                   var rating = $(\"input[name='stars']:checked\").val();\n\n                                   Ajax.call([{\n                                       methodname: 'format_mintcampus_save_rating',\n                                       args: {courseid: courseid, rating: rating}\n                                   }])[0].then(function () {\n\n                                   }).always(pendingPromise.resolve)\n                                       .catch(Notification.exception);\n\n                                   Notification.alert(\n                                       await Str.get_string('ratingsavesuccessheader', 'format_mintcampus'),\n                                       await Str.get_string('ratingsavesuccess', 'format_mintcampus'),\n                                       await Str.get_string('close', 'format_mintcampus')\n                                   );\n\n                               });\n\n                               // Handle hidden event.\n                               modal.getRoot().on(ModalEvents.hidden, function() {\n                                   // Destroy when hidden.\n                                   modal.destroy();\n                               });\n\n                               modal.show();\n\n                           }).catch(Notification.exception);\n\n                       }).always(pendingPromise.resolve)\n                           .catch(Notification.exception);\n                   });\n\n                   //wait for courseindex to load\n                   function waitForElm(selector) {\n                       return new Promise(resolve => {\n                           if (document.querySelector(selector)) {\n                               return resolve(document.querySelector(selector));\n                           }\n\n                           const observer = new MutationObserver(mutations => {\n                               if (document.querySelector(selector)) {\n                                   resolve(document.querySelector(selector));\n                                   observer.disconnect();\n                               }\n                           });\n\n                           observer.observe(document.body, {\n                               childList: true,\n                               subtree: true\n                           });\n                       });\n                   }\n\n                   waitForElm('#courseindex').then((elm) => {\n                       $(\"div.courseindex-section[data-number='0']\").first().hide();\n\n                       //get data from database and set toggle for activities\n                       Ajax.call([{\n                           methodname: 'format_mintcampus_get_activity_setting',\n                           args: {courseid: courseid}\n                       }])[0].then(function (toggledata) {\n\n                           if(toggledata.length > 0 && toggledata[0]['cmid'] != 0){\n                               toggledata.forEach(data=>\n                                   $(\"#courseindex-content\").find(\"li[data-id='\"+data['cmid']+\"']\").removeClass(\"d-flex\").addClass(\"d-flex-noedit\")\n                               );\n                           }\n\n                       }).always(pendingPromise.resolve)\n                           .catch(Notification.exception);\n\n                   });\n                   //end\n\n               }).always(pendingPromise.resolve).catch(Notification.exception);\n\n            }\n        };\n        return {\n            init: init\n        };\n    });\n"],"names":["define","$","Ajax","Notification","Str","Templates","ModalFactory","ModalEvents","Pending","init","cmid","pendingPromise","length","call","methodname","args","then","activitydata","async","html","find","addClass","removeClass","get_string","courseid","attr","selector","click","ratingprompt","create","title","body","type","types","SAVE_CANCEL","large","modal","setSaveButtonText","handleInputChange","e","target","min","max","val","value","style","backgroundSize","document","querySelectorAll","forEach","input","addEventListener","getRoot","on","save","submission","always","resolve","catch","exception","rating","alert","hidden","destroy","show","Promise","querySelector","observer","MutationObserver","mutations","disconnect","observe","childList","subtree","elm","first","hide","toggledata","data"],"mappings":"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"}