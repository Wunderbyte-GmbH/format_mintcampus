{"version":3,"file":"activitysetting.min.js","sources":["../src/activitysetting.js"],"sourcesContent":["define(['jquery','core/ajax',\n        'core/notification',\n        'core/str',\n        'core/templates',\n        'core/modal_factory',\n        'core/modal_events',\n        'core/pending'],\n    function ($,Ajax,\n              Notification,\n              Str,\n              Templates,\n              ModalFactory,\n              ModalEvents,\n              Pending) {\n        /**\n         * Init this module which allows activity completion state to be changed via ajax.\n         * @method init\n         * @param {string} fullName The current user's full name.\n         * @private\n         */\n        const init = function (courseid) {\n\n            var pendingPromise = new Pending('format_mintcampus/activitysetting:init');\n\n            //get data from database and set toggle for activities\n            Ajax.call([{\n                methodname: 'format_mintcampus_get_activity_setting',\n                args: {courseid: courseid}\n            }])[0].then(function (toggledata) {\n\n                if(toggledata.length > 0 && toggledata[0]['cmid'] != 0){\n\n                    toggledata.forEach(data=>\n                        $(\"#courseindexsetting\"+data['cmid']).prop(\"checked\", true)\n                    );\n                }\n\n            }).always(pendingPromise.resolve)\n                .catch(Notification.exception);\n\n            //change settings in database for activity toggle\n            $('[id^=\"courseindexsetting\"]').change(function() {\n                var cmid = $(this).attr(\"data-id\");\n                if(this.checked) {\n                    // Toggle is on\n                    Ajax.call([{\n                        methodname: 'format_mintcampus_set_activity_setting',\n                        args: {courseid:courseid, cmid:cmid, state:true}\n                    }])[0].then(function (toggle) {\n\n                    }).always(pendingPromise.resolve)\n                        .catch(Notification.exception);\n\n                } else {\n                    // Toggle is off\n                    Ajax.call([{\n                        methodname: 'format_mintcampus_set_activity_setting',\n                        args: {courseid:courseid, cmid:cmid, state:false}\n                    }])[0].then(function (toggle) {\n\n                    }).always(pendingPromise.resolve)\n                        .catch(Notification.exception);\n                }\n            });\n\n        };\n        return {\n            init: init\n        };\n    });\n"],"names":["define","$","Ajax","Notification","Str","Templates","ModalFactory","ModalEvents","Pending","init","courseid","pendingPromise","call","methodname","args","then","toggledata","length","forEach","data","prop","always","resolve","catch","exception","change","cmid","this","attr","checked","state","toggle"],"mappings":"AAAAA,2CAAO,CAAC,SAAS,YACT,oBACA,WACA,iBACA,qBACA,oBACA,iBACJ,SAAUC,EAAEC,KACFC,aACAC,IACAC,UACAC,aACAC,YACAC,eAqDC,CACHC,KA/CS,SAAUC,cAEfC,eAAiB,IAAIH,QAAQ,0CAGjCN,KAAKU,KAAK,CAAC,CACPC,WAAY,yCACZC,KAAM,CAACJ,SAAUA,aACjB,GAAGK,MAAK,SAAUC,YAEfA,WAAWC,OAAS,GAA8B,GAAzBD,WAAW,GAAX,MAExBA,WAAWE,SAAQC,MACflB,EAAE,sBAAsBkB,KAAI,MAAUC,KAAK,WAAW,QAI/DC,OAAOV,eAAeW,SACpBC,MAAMpB,aAAaqB,WAGxBvB,EAAE,8BAA8BwB,QAAO,eAC/BC,KAAOzB,EAAE0B,MAAMC,KAAK,WACrBD,KAAKE,QAEJ3B,KAAKU,KAAK,CAAC,CACPC,WAAY,yCACZC,KAAM,CAACJ,SAASA,SAAUgB,KAAKA,KAAMI,OAAM,MAC3C,GAAGf,MAAK,SAAUgB,YAEnBV,OAAOV,eAAeW,SACpBC,MAAMpB,aAAaqB,WAIxBtB,KAAKU,KAAK,CAAC,CACPC,WAAY,yCACZC,KAAM,CAACJ,SAASA,SAAUgB,KAAKA,KAAMI,OAAM,MAC3C,GAAGf,MAAK,SAAUgB,YAEnBV,OAAOV,eAAeW,SACpBC,MAAMpB,aAAaqB"}