{"version":3,"file":"hide_from_index.min.js","sources":["../src/hide_from_index.js"],"sourcesContent":["define(['jquery','core/ajax',\n        'core/notification',\n        'core/str',\n        'core/templates',\n        'core/modal_factory',\n        'core/modal_events',\n        'core/pending'],\n    function ($,Ajax,\n              Notification,\n              Str,\n              Templates,\n              ModalFactory,\n              ModalEvents,\n              Pending) {\n        /**\n         * Init this module which allows activity completion state to be changed via ajax.\n         * @method init\n         * @param {string} fullName The current user's full name.\n         * @private\n         */\n        const init = function (courseid) {\n\n            var pendingPromise = new Pending('format_mintcampus/activitysetting:init');\n\n            function waitForElm(selector) {\n                return new Promise(resolve => {\n                    if (document.querySelector(selector)) {\n                        return resolve(document.querySelector(selector));\n                    }\n\n                    const observer = new MutationObserver(mutations => {\n                        if (document.querySelector(selector)) {\n                            resolve(document.querySelector(selector));\n                            observer.disconnect();\n                        }\n                    });\n\n                    observer.observe(document.body, {\n                        childList: true,\n                        subtree: true\n                    });\n                });\n            }\n\n            waitForElm('#courseindex').then((elm) => {\n                $(\"div.courseindex-section[data-number='0']\").first().hide();\n\n                //get data from database and set toggle for activities\n                Ajax.call([{\n                    methodname: 'format_mintcampus_get_activity_setting',\n                    args: {courseid: courseid}\n                }])[0].then(function (toggledata) {\n\n                    if(toggledata.length > 0 && toggledata[0]['cmid'] != 0){\n                        toggledata.forEach(data=>\n                            $(\"#courseindex-content\").find(\"li[data-id='\"+data['cmid']+\"']\").removeClass(\"d-flex\").addClass(\"d-flex-noedit\")\n                        );\n                    }\n\n                }).always(pendingPromise.resolve)\n                    .catch(Notification.exception);\n\n            });\n\n        };\n        return {\n            init: init\n        };\n    });\n"],"names":["define","$","Ajax","Notification","Str","Templates","ModalFactory","ModalEvents","Pending","init","courseid","selector","pendingPromise","Promise","resolve","document","querySelector","observer","MutationObserver","mutations","disconnect","observe","body","childList","subtree","then","elm","first","hide","call","methodname","args","toggledata","length","forEach","data","find","removeClass","addClass","always","catch","exception"],"mappings":"AAAAA,2CAAO,CAAC,SAAS,YACT,oBACA,WACA,iBACA,qBACA,oBACA,iBACJ,SAAUC,EAAEC,KACFC,aACAC,IACAC,UACAC,aACAC,YACAC,eAoDC,CACHC,KA9CS,SAAUC,cAICC,SAFhBC,eAAiB,IAAIJ,QAAQ,2CAEbG,SAoBT,eAnBA,IAAIE,SAAQC,aACXC,SAASC,cAAcL,iBAChBG,QAAQC,SAASC,cAAcL,iBAGpCM,SAAW,IAAIC,kBAAiBC,YAC9BJ,SAASC,cAAcL,YACvBG,QAAQC,SAASC,cAAcL,WAC/BM,SAASG,iBAIjBH,SAASI,QAAQN,SAASO,KAAM,CAC5BC,WAAW,EACXC,SAAS,QAKMC,MAAMC,MAC7BzB,EAAE,4CAA4C0B,QAAQC,OAGtD1B,KAAK2B,KAAK,CAAC,CACPC,WAAY,yCACZC,KAAM,CAACrB,SAAUA,aACjB,GAAGe,MAAK,SAAUO,YAEfA,WAAWC,OAAS,GAA8B,GAAzBD,WAAW,GAAX,MACxBA,WAAWE,SAAQC,MACflC,EAAE,wBAAwBmC,KAAK,eAAeD,KAAI,KAAS,MAAME,YAAY,UAAUC,SAAS,sBAIzGC,OAAO3B,eAAeE,SACpB0B,MAAMrC,aAAasC"}