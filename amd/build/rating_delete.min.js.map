{"version":3,"file":"rating_delete.min.js","sources":["../src/rating_delete.js"],"sourcesContent":["/**\n * mintcampus Course Format settings\n *\n * @package    format_mintcampus\n * @version    See the value of '$plugin->version' in the version.php file.\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later.\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/pending'],\n    function ($, Ajax, Notification, Str, ModalFactory, ModalEvents, Pending) {\n\n        /**\n         * Initializes the delete rating functionality.\n         * @method init\n         * @private\n         */\n        const init = function () {\n            console.log(\"init\");\n            var pendingPromise = new Pending('format_mintcampus/rating_delete:init');\n\n            // Full-body event listener to handle dynamically added elements\n            $('body').on('click', '[data-ratingid]', function () {\n                const ratingid = $(this).data('ratingid');\n                console.log(\"Clicked on rating with ID:\", ratingid);\n\n                // Trigger custom event with ratingid\n                $(this).trigger('deleteRating', { ratingid: ratingid });\n\n                ModalFactory.create({\n                    title: Str.get_string('confirmdeletion', 'format_mintcampus'),\n                    body: Str.get_string('confirmdeletemsg', 'format_mintcampus'),\n                    type: ModalFactory.types.SAVE_CANCEL\n                }).then(function (modal) {\n                    modal.setSaveButtonText(Str.get_string('delete', 'core'));\n                \n                    // Handle save (delete confirmation)\n                    modal.getRoot().on(ModalEvents.save, function (e) {\n                        e.preventDefault();\n                \n                        // Perform AJAX request to delete rating\n                        Ajax.call([{\n                            methodname: 'format_mintcampus_delete_rating',\n                            args: { ratingid: ratingid }\n                        }])[0].then(function (response) {\n                            if (response.status === 'success') {\n                                Notification.alert(\n                                    Str.get_string('deletionsuccess', 'format_mintcampus'),\n                                    Str.get_string('ratingsuccessfullydeleted', 'format_mintcampus'),\n                                    Str.get_string('close', 'format_mintcampus')\n                                );\n                                \n                                // Remove the rating item from the DOM\n                                // Find the closest .ratings container and remove it\n                                $(`[data-ratingid=\"${ratingid}\"]`).parents('.rating-item').fadeOut(300, function () {\n                                    setTimeout(() => $(this).remove(), 300);\n                                }); \n             \n                                // Close the modal after success\n                                modal.hide();\n                            } else {\n                                Notification.alert(\n                                    Str.get_string('deletionerror', 'format_mintcampus'),\n                                    response.message,\n                                    Str.get_string('close', 'format_mintcampus')\n                                );\n                            }\n                        }).fail(function(error) {\n                            Notification.exception(error);\n                        }).always(pendingPromise.resolve);\n                    });\n                \n                    // Handle hidden event (cleanup)\n                    modal.getRoot().on(ModalEvents.hidden, function () {\n                        modal.destroy();\n                    });\n                \n                    modal.show();\n                }).catch(Notification.exception);                \n            });\n\n            // Custom event listener for deleteRating event\n            $('body').on('deleteRating', function (event, data) {\n                console.log('Custom deleteRating event triggered for rating ID:', data.ratingid);\n            });\n        };\n\n        return {\n            init: init\n        };\n    }\n);\n"],"names":["define","$","Ajax","Notification","Str","ModalFactory","ModalEvents","Pending","init","console","log","pendingPromise","on","ratingid","this","data","trigger","create","title","get_string","body","type","types","SAVE_CANCEL","then","modal","setSaveButtonText","getRoot","save","e","preventDefault","call","methodname","args","response","status","alert","parents","fadeOut","setTimeout","remove","hide","message","fail","error","exception","always","resolve","hidden","destroy","show","catch","event"],"mappings":";;;;;;;AAQAA,yCAAO,CAAC,SAAU,YAAa,oBAAqB,WAAY,qBAAsB,oBAAqB,iBACvG,SAAUC,EAAGC,KAAMC,aAAcC,IAAKC,aAAcC,YAAaC,eA6EtD,CACHC,KAvES,WACTC,QAAQC,IAAI,YACRC,eAAiB,IAAIJ,QAAQ,wCAGjCN,EAAE,QAAQW,GAAG,QAAS,mBAAmB,iBAC/BC,SAAWZ,EAAEa,MAAMC,KAAK,YAC9BN,QAAQC,IAAI,6BAA8BG,UAG1CZ,EAAEa,MAAME,QAAQ,eAAgB,CAAEH,SAAUA,WAE5CR,aAAaY,OAAO,CAChBC,MAAOd,IAAIe,WAAW,kBAAmB,qBACzCC,KAAMhB,IAAIe,WAAW,mBAAoB,qBACzCE,KAAMhB,aAAaiB,MAAMC,cAC1BC,MAAK,SAAUC,OACdA,MAAMC,kBAAkBtB,IAAIe,WAAW,SAAU,SAGjDM,MAAME,UAAUf,GAAGN,YAAYsB,MAAM,SAAUC,GAC3CA,EAAEC,iBAGF5B,KAAK6B,KAAK,CAAC,CACPC,WAAY,kCACZC,KAAM,CAAEpB,SAAUA,aAClB,GAAGW,MAAK,SAAUU,UACM,YAApBA,SAASC,QACThC,aAAaiC,MACThC,IAAIe,WAAW,kBAAmB,qBAClCf,IAAIe,WAAW,4BAA6B,qBAC5Cf,IAAIe,WAAW,QAAS,sBAK5BlB,EAAG,mBAAkBY,cAAcwB,QAAQ,gBAAgBC,QAAQ,KAAK,WACpEC,YAAW,IAAMtC,EAAEa,MAAM0B,UAAU,QAIvCf,MAAMgB,QAENtC,aAAaiC,MACThC,IAAIe,WAAW,gBAAiB,qBAChCe,SAASQ,QACTtC,IAAIe,WAAW,QAAS,yBAGjCwB,MAAK,SAASC,OACbzC,aAAa0C,UAAUD,UACxBE,OAAOnC,eAAeoC,YAI7BtB,MAAME,UAAUf,GAAGN,YAAY0C,QAAQ,WACnCvB,MAAMwB,aAGVxB,MAAMyB,UACPC,MAAMhD,aAAa0C,cAI1B5C,EAAE,QAAQW,GAAG,gBAAgB,SAAUwC,MAAOrC,MAC1CN,QAAQC,IAAI,qDAAsDK,KAAKF"}